{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React\\\\project\\\\rainymood\\\\src\\\\component\\\\DarkMode\\\\index.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudShowersHeavy, faCloudSun } from '@fortawesome/free-solid-svg-icons';\nimport className from 'classnames/bind';\nimport styles from './DarkMode.module.scss';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = className.bind(styles);\nconst DarkMode = () => {\n  _s();\n  const [DarkMode, setDarkMode] = useState();\n  const [LightMode, setLightMode] = useState();\n  setDarkMode = () => {\n    document.querySelector('body').setAttribute('data-theme', 'dark');\n  };\n  setLightMode = () => {\n    document.querySelector('body').setAttribute('data-theme', 'light');\n  };\n  const toggleTheme = e => {\n    if (e.target.checked) DarkMode;else LightMode;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('dark-mode'),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: cx('dark_mode_input'),\n      type: \"checkbox\",\n      id: \"darkmode-toggle\",\n      onChange: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: cx('dark_mode_label'),\n      htmlFor: \"darkmode-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: cx('sunny'),\n        icon: faCloudSun\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: cx('rainy'),\n        icon: faCloudShowersHeavy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(DarkMode, \"isZS7/rlItl7gaZHmnb4ooy2v2Y=\");\n_c = DarkMode;\nexport default DarkMode;\nvar _c;\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"names":["FontAwesomeIcon","faCloudShowersHeavy","faCloudSun","className","styles","useState","jsxDEV","_jsxDEV","cx","bind","DarkMode","_s","setDarkMode","LightMode","setLightMode","document","querySelector","setAttribute","toggleTheme","e","target","checked","children","type","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","icon","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/React/project/rainymood/src/component/DarkMode/index.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCloudShowersHeavy, faCloudSun } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport className from 'classnames/bind';\r\nimport styles from './DarkMode.module.scss';\r\nimport { useState } from 'react';\r\n\r\nconst cx = className.bind(styles);\r\n\r\nconst DarkMode = () => {\r\n    const [DarkMode, setDarkMode] = useState();\r\n    const [LightMode, setLightMode] = useState();\r\n\r\n    setDarkMode = () => {\r\n        document.querySelector('body').setAttribute('data-theme', 'dark');\r\n    };\r\n\r\n    setLightMode = () => {\r\n        document.querySelector('body').setAttribute('data-theme', 'light');\r\n    };\r\n\r\n    const toggleTheme = (e) => {\r\n        if (e.target.checked) DarkMode;\r\n        else LightMode;\r\n    };\r\n\r\n    return (\r\n        <div className={cx('dark-mode')}>\r\n            <input className={cx('dark_mode_input')} type=\"checkbox\" id=\"darkmode-toggle\" onChange={toggleTheme} />\r\n            <label className={cx('dark_mode_label')} htmlFor=\"darkmode-toggle\">\r\n                <FontAwesomeIcon className={cx('sunny')} icon={faCloudSun} />\r\n                <FontAwesomeIcon className={cx('rainy')} icon={faCloudShowersHeavy} />\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DarkMode;\r\n"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,mBAAmB,EAAEC,UAAU,QAAQ,mCAAmC;AAEnF,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,EAAE,GAAGL,SAAS,CAACM,IAAI,CAACL,MAAM,CAAC;AAEjC,MAAMM,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACD,QAAQ,EAAEE,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC1C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAE5CO,WAAW,GAAGA,CAAA,KAAM;IAChBG,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC;EACrE,CAAC;EAEDH,YAAY,GAAGA,CAAA,KAAM;IACjBC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACC,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC;EACtE,CAAC;EAED,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvB,IAAIA,CAAC,CAACC,MAAM,CAACC,OAAO,EAAEX,QAAQ,CAAC,KAC1BG,SAAS;EAClB,CAAC;EAED,oBACIN,OAAA;IAAKJ,SAAS,EAAEK,EAAE,CAAC,WAAW,CAAE;IAAAc,QAAA,gBAC5Bf,OAAA;MAAOJ,SAAS,EAAEK,EAAE,CAAC,iBAAiB,CAAE;MAACe,IAAI,EAAC,UAAU;MAACC,EAAE,EAAC,iBAAiB;MAACC,QAAQ,EAAEP;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvGtB,OAAA;MAAOJ,SAAS,EAAEK,EAAE,CAAC,iBAAiB,CAAE;MAACsB,OAAO,EAAC,iBAAiB;MAAAR,QAAA,gBAC9Df,OAAA,CAACP,eAAe;QAACG,SAAS,EAAEK,EAAE,CAAC,OAAO,CAAE;QAACuB,IAAI,EAAE7B;MAAW;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DtB,OAAA,CAACP,eAAe;QAACG,SAAS,EAAEK,EAAE,CAAC,OAAO,CAAE;QAACuB,IAAI,EAAE9B;MAAoB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAClB,EAAA,CA1BID,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}