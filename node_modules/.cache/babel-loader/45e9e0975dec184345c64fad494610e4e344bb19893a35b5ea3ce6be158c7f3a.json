{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React\\\\project\\\\rainymood\\\\src\\\\component\\\\Audio\\\\index.js\";\nimport styles from './Audio.module.scss';\nimport className from 'classnames/bind';\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cx = className.bind(styles);\nconst sound = {\n  title: 'Card Title',\n  waveType: 'Ocean.mp3',\n  imageUrl: '/CalmOceanWaves.png'\n};\nfunction Audio() {\n  // const [play, setPlay] = useState(false);\n  // const oceanRef = useRef < HTMLAudioElement > null;\n  // const MAX = 20;\n\n  // function toggleAudio(): void {\n  //     if (play) {\n  //         oceanRef.current?.pause();\n  //         setPlay(false);\n  //     } else {\n  //         void oceanRef.current?.play();\n  //         setPlay(true);\n  //     }\n  // }\n\n  // function handleVolume(e: React.ChangeEvent<HTMLInputElement>): void {\n  //     const { value } = e.target;\n  //     const volume = Number(value) / MAX;\n  //     oceanRef.current.volume = volume;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx('audio'),\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCirclePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faVolumeHigh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_c = Audio;\nexport default Audio;\nvar _c;\n$RefreshReg$(_c, \"Audio\");","map":{"version":3,"names":["styles","className","React","useRef","useState","jsxDEV","_jsxDEV","cx","bind","sound","title","waveType","imageUrl","Audio","children","FontAwesomeIcon","icon","faCirclePlay","fileName","_jsxFileName","lineNumber","columnNumber","faVolumeHigh","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/React/project/rainymood/src/component/Audio/index.js"],"sourcesContent":["import styles from './Audio.module.scss';\r\nimport className from 'classnames/bind';\r\nimport React, { useRef, useState } from 'react';\r\n\r\nconst cx = className.bind(styles);\r\n\r\nconst sound = {\r\n    title: 'Card Title',\r\n    waveType: 'Ocean.mp3',\r\n    imageUrl: '/CalmOceanWaves.png',\r\n};\r\n\r\nfunction Audio() {\r\n    // const [play, setPlay] = useState(false);\r\n    // const oceanRef = useRef < HTMLAudioElement > null;\r\n    // const MAX = 20;\r\n\r\n    // function toggleAudio(): void {\r\n    //     if (play) {\r\n    //         oceanRef.current?.pause();\r\n    //         setPlay(false);\r\n    //     } else {\r\n    //         void oceanRef.current?.play();\r\n    //         setPlay(true);\r\n    //     }\r\n    // }\r\n\r\n    // function handleVolume(e: React.ChangeEvent<HTMLInputElement>): void {\r\n    //     const { value } = e.target;\r\n    //     const volume = Number(value) / MAX;\r\n    //     oceanRef.current.volume = volume;\r\n    // }\r\n\r\n    return (\r\n        <div className={cx('audio')}>\r\n            <button>\r\n                <FontAwesomeIcon icon={faCirclePlay} />\r\n            </button>\r\n            <button>\r\n                <FontAwesomeIcon icon={faVolumeHigh} />\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Audio;\r\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,EAAE,GAAGN,SAAS,CAACO,IAAI,CAACR,MAAM,CAAC;AAEjC,MAAMS,KAAK,GAAG;EACVC,KAAK,EAAE,YAAY;EACnBC,QAAQ,EAAE,WAAW;EACrBC,QAAQ,EAAE;AACd,CAAC;AAED,SAASC,KAAKA,CAAA,EAAG;EACb;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACIP,OAAA;IAAKL,SAAS,EAAEM,EAAE,CAAC,OAAO,CAAE;IAAAO,QAAA,gBACxBR,OAAA;MAAAQ,QAAA,eACIR,OAAA,CAACS,eAAe;QAACC,IAAI,EAAEC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACTf,OAAA;MAAAQ,QAAA,eACIR,OAAA,CAACS,eAAe;QAACC,IAAI,EAAEM;MAAa;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACE,EAAA,GA/BQV,KAAK;AAiCd,eAAeA,KAAK;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}